#!/usr/bin/env node

var builderStates = Object.freeze({init:'init', build:'build', update:'update'})
	, argv = process.argv.slice(2)
	, fsHelper = require('./js_modules/fs_helper')
	, fs = require('fs')
	, pageBuilder = require('./js_modules/page_builder')
	, errorHandler = require('./js_modules/error_handler')
	, util = require('util');

printUsage = function() {};

init = function(prjName) {
	var projDir = process.cwd() + '/' + prjName;

	if(fs.existsSync(prjName)) {
		errorHandler.error(
			'There already exists directory with name ' + prjName + '!');
		process.exit(1);
	}

	// check is directory exist and remove it
	// in case of 'init' we need rebuild site
	// from the scratch
	fsHelper.rmkdirSync(projDir);

	// Initalize site dierctory with common data
	fsHelper.copyInitialSeedSiteData(projDir);
};

build = function() {
	pageBuilder.buildSite();
};

update = function() {
	errorHandler.error('Not implemented yet!');
};

try {
	if(argv[0] == builderStates.init) {
		// Init is calles with the project name
		// in case no project name provided
		// sabre-turbo is used
		if(argv[1]) {
			init(argv[1]);
		} else {
			init('sabre-turbo');
		}
	} else if (argv[0] == builderStates.build) {
		// Build is called
		build();
	} else {
		update();
	}
} catch (err) {
	if(err) {
		errorHandler.error('There was a problem executing sabre-turbo!');
		errorHandler.error(util.inspect(err));
		process.exit(1);
	}
}
